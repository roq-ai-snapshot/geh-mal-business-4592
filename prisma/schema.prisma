generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model feedback {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating           Int
  comment          String?
  customer_id      String        @db.Uuid
  shell_company_id String        @db.Uuid
  user             user          @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shell_company    shell_company @relation(fields: [shell_company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String          @db.VarChar(255)
  user_id       String          @db.Uuid
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shell_company shell_company[]
}

model service {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String        @db.VarChar(255)
  shell_company_id String        @db.Uuid
  shell_company    shell_company @relation(fields: [shell_company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model shell_company {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String       @db.VarChar(255)
  organization_id String       @db.Uuid
  feedback        feedback[]
  service         service[]
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  software        software[]
  task            task[]
}

model software {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String        @db.VarChar(255)
  shell_company_id String        @db.Uuid
  shell_company    shell_company @relation(fields: [shell_company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model task {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String        @db.VarChar(255)
  description      String?
  status           String        @db.VarChar(255)
  user_id          String        @db.Uuid
  shell_company_id String        @db.Uuid
  shell_company    shell_company @relation(fields: [shell_company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  feedback     feedback[]
  organization organization[]
  task         task[]
}
